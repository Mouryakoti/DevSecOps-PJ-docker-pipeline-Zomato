pipeline {
    agent any
     environment {
         scannerHome=tool 'mysonar'
     }
    stages {
        stage('CleanWs') {
            steps {
                  cleanWs()
            }
        }
        stage('code') {
            steps {
                git branch: 'main', url: 'https://github.com/Mouryakoti/Zomato-Repo.git'
            }
        }
        stage('CQA') {
            steps {
                withSonarQubeEnv('mysonar') {
                  sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=zomato"
               }
            }
        }
        stage('Qualitygates') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage('pull') {
            steps {
                withDockerRegistry(credentialsId: 'Dockerhub') {
                    sh 'docker pull mourya09/dockpj:zomato'
              }
           }
       }
       stage('SCAN') {
           steps {
               sh 'trivy image mourya09/dockpj:zomato'
           }
        } 
        stage('multiple services')  {
            steps {
                sh 'docker service create --name food --replicas 6 --publish 2233:3000 mourya09/dockpj:zomato'
            }
        }
    }    
}
